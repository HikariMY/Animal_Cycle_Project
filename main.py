import networkx as nx
import matplotlib.pyplot as plt

class EcosystemGraph:
    def __init__(self):
        self.G = nx.DiGraph()
        self.nodes = {}  # ‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå
        self.ecosystem_type = "‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ö‡∏Å"

    def set_ecosystem(self, eco_type):
        """‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏® (‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ö‡∏Å / ‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ô‡πâ‡∏≥)"""
        self.ecosystem_type = eco_type
        print(f"\nüîπ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏®‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô: {eco_type}")

    def add_species(self, name, category):
        """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡πà‡∏á‡∏°‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏®"""
        self.G.add_node(name)
        self.nodes[name] = category
        print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° {name} ‡πÄ‡∏õ‡πá‡∏ô {category} ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö {self.ecosystem_type}")

    def add_relationship(self, predator, prey):
        """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå"""
        if predator in self.nodes and prey in self.nodes:
            self.G.add_edge(prey, predator)
            print(f"üîó {predator} ‡∏•‡πà‡∏≤ {prey}")
        else:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏Å‡πà‡∏≠‡∏ô!")

    def analyze_ecosystem(self):
        """‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏®"""
        herbivores = [n for n in self.nodes if self.nodes[n] == "Herbivore"]
        predators = [n for n in self.nodes if self.nodes[n] == "Carnivore"]

        print("\nüìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏®:")
        if len(herbivores) > len(predators) * 3:
            print("‚ö†Ô∏è ‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡∏ä‡πÄ‡∏¢‡∏≠‡∏∞‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏û‡∏∑‡∏ä‡∏•‡∏î‡∏•‡∏á!")
        if len(predators) < len(herbivores) / 2:
            print("‚ö†Ô∏è ‡∏ú‡∏π‡πâ‡∏•‡πà‡∏≤‡∏°‡∏µ‡∏ô‡πâ‡∏≠‡∏¢ ‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡∏ä‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡πá‡∏ß!")
        if len(predators) > len(herbivores):
            print("‚ö†Ô∏è ‡∏ú‡∏π‡πâ‡∏•‡πà‡∏≤‡πÄ‡∏¢‡∏≠‡∏∞‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡∏ä‡∏•‡∏î‡∏•‡∏á!")

    def draw_graph(self):
        """‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏£‡∏≤‡∏ü‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏®"""
        pos = nx.spring_layout(self.G, seed=42)
        node_colors = {"Producer": "green", "Herbivore": "blue", "Carnivore": "red", "Decomposer": "brown"}
        colors = [node_colors[self.nodes[node]] for node in self.G.nodes]

        plt.figure(figsize=(8, 6))
        nx.draw(self.G, pos, with_labels=True, node_color=colors, edge_color="gray",
                node_size=2000, font_size=10, font_weight="bold", arrows=True)
        plt.title(f"Ecosystem Graph - {self.ecosystem_type}")
        plt.show()

# ==========================
# ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å
# ==========================
eco = EcosystemGraph()

while True:
    print("\nüåç ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏®")
    print("1Ô∏è‚É£ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏® (‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ö‡∏Å / ‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ô‡πâ‡∏≥)")
    print("2Ô∏è‚É£ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡πà‡∏á‡∏°‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏®")
    print("3Ô∏è‚É£ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πà‡∏ß‡∏á‡πÇ‡∏ã‡πà‡∏≠‡∏≤‡∏´‡∏≤‡∏£")
    print("4Ô∏è‚É£ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏®")
    print("5Ô∏è‚É£ ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏®")
    print("0Ô∏è‚É£ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
    
    choice = input("üîπ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π: ")

    if choice == "1":
        eco_type = input("üü¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏® (‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ö‡∏Å / ‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ô‡πâ‡∏≥): ")
        eco.set_ecosystem(eco_type)

    elif choice == "2":
        name = input("‚úèÔ∏è ‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏°‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï: ")
        print("üî∏ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ: Producer, Herbivore, Carnivore, Decomposer")
        category = input("üü° ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ")
        eco.add_species(name, category)

    elif choice == "3":
        predator = input("üî¥ ‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏•‡πà‡∏≤: ")
        prey = input("üîµ ‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠: ")
        eco.add_relationship(predator, prey)

    elif choice == "4":
        eco.analyze_ecosystem()

    elif choice == "5":
        eco.draw_graph()

    elif choice == "0":
        print("üëã ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°...")
        break

    else:
        print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!")
